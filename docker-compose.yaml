version: '3.9'

x-kong-config: &kong-env
  KONG_DATABASE: postgres
  KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
  KONG_PG_HOST: kong-database
  KONG_PG_USER: ${POSTGRES_USER:-kong}
  KONG_PG_PASSWORD_FILE: /run/secrets/kong_postgres_password

volumes:
  kong_data: {}
  kong_prefix_vol:
    driver_opts:
      type: tmpfs
      device: tmpfs
  kong_tmp_vol:
    driver_opts:
      type: tmpfs
      device: tmpfs

services:
  deck:
    image: kong/deck
    container_name: deck
    # Change uid if need
    user: '1000:1000'
    environment: 
      DECK_KONG_ADDR: http://kong-gateway:8001
    # depends_on:
    #   - kong-gateway
    entrypoint: deck gateway ping
    # entrypoint: deck dump -o /mnt/deck/kong.yaml
    # entrypoint: deck sync -s /mnt/deck/kong.yaml
    volumes:
      - ${PWD}/backup/:/deck/
    networks:
      - kong-net
    restart: on-failure

  kong-migrations:
    image: kong/kong-gateway:3.4.1.0
    command: kong migrations bootstrap
    depends_on:
      - kong-database
    environment:
      <<: *kong-env
    secrets:
      - kong_postgres_password
    networks:
      - kong-net
    restart: on-failure

  kong-migrations-up:
    image: kong/kong-gateway:3.4.1.0
    command: kong migrations up && kong migrations finish
    depends_on:
      - kong-database
    environment:
      <<: *kong-env
    secrets:
      - kong_postgres_password
    networks:
      - kong-net
    restart: on-failure

  kong-gateway:
    image: kong/kong-gateway:3.4.1.0
    user: "${KONG_USER:-kong}"
    volumes:
      - kong_prefix_vol:${KONG_PREFIX:-/var/run/kong}
      - kong_tmp_vol:/tmp
      # - ./config:/opt/kong
      # - ./certificate:/certificate
      - ./config_file:/etc/kong
    networks:
      - kong-net
    environment:
      <<: *kong-env
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:${KONG_ADMIN_LISTEN:-8001}
      # KONG_PROXY_LISTEN: 0.0.0.0:${KONG_PROXY_LISTEN:-8443}
      # KONG_PROXY_LISTEN: "0.0.0.0:8000, 0.0.0.0:8443 ssl"
      KONG_PROXY_LISTEN: "${KONG_PROXY_LISTEN:-0.0.0.0:8000}, ${KONG_PROXY_LISTEN:-0.0.0.0:8443 ssl}"
      proxy_timeout_seconds: 0
      proxy_sync_seconds: 0
    secrets:
      - kong_postgres_password
    ports:
      # - '${KONG_PROXY_PORT:-8000}:8000'
      - '${KONG_ADMIN_PORT:-8001}:8001'
      - "${KONG_INBOUND_PROXY_LISTEN:-0.0.0.0}:8000:8000/tcp"
      # listen on https port
      - "${KONG_INBOUND_SSL_PROXY_LISTEN:-0.0.0.0}:8443:8443/tcp"
      # - "127.0.0.1:8001:8001/tcp"
      - "127.0.0.1:8444:8444/tcp"
      - "127.0.0.1:8002:8002/tcp"
    depends_on:
      - kong-database
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure:5
  kong-database:
    image: postgres:13
    environment:
      - POSTGRES_DB=${KONG_PG_DATABASE:-kong}
      - POSTGRES_USER=${POSTGRES_USER:-kong}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-kongpass}
      # - NODE_TLS_REJECT_UNAUTHORIZED = 0
    networks:
      - kong-net

networks:
  kong-net:
    driver: bridge

secrets:
  kong_postgres_password:
    file: ./POSTGRES_PASSWORD
